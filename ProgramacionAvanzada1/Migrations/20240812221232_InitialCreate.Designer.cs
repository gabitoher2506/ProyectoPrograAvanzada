// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProgramacionAvanzada1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240812221232_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Administrador", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Enfermero", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Enfermeros");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Entrenador", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Equipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Entrenadores");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Mensaje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmisorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceptorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmisorID");

                    b.HasIndex("ReceptorID");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Pokedex", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Debilidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Evoluciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Pokedexes");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Pokemon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Debilidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("EntrenadorID")
                        .HasColumnType("int");

                    b.Property<string>("Evoluciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("EntrenadorID");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Reto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("EntrenadorID1")
                        .HasColumnType("int");

                    b.Property<int?>("EntrenadorID2")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resultado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EntrenadorID1");

                    b.HasIndex("EntrenadorID2");

                    b.ToTable("Retos");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsuarioName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Administrador", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Enfermero", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Entrenador", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Mensaje", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Entrenador", "Emisor")
                        .WithMany()
                        .HasForeignKey("EmisorID");

                    b.HasOne("ProgramacionAvanzada1.Models.Entrenador", "Receptor")
                        .WithMany()
                        .HasForeignKey("ReceptorID");

                    b.Navigation("Emisor");

                    b.Navigation("Receptor");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Pokemon", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Entrenador", "Entrenador")
                        .WithMany()
                        .HasForeignKey("EntrenadorID");

                    b.Navigation("Entrenador");
                });

            modelBuilder.Entity("ProgramacionAvanzada1.Models.Reto", b =>
                {
                    b.HasOne("ProgramacionAvanzada1.Models.Entrenador", "Entrenador1")
                        .WithMany()
                        .HasForeignKey("EntrenadorID1");

                    b.HasOne("ProgramacionAvanzada1.Models.Entrenador", "Entrenador2")
                        .WithMany()
                        .HasForeignKey("EntrenadorID2");

                    b.Navigation("Entrenador1");

                    b.Navigation("Entrenador2");
                });
#pragma warning restore 612, 618
        }
    }
}
